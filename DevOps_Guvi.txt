INSTALL
*Git
*Maven
*Docker
*Jenkins
*Virtual machine -> Ubuntu

DOCKER COMMANDS
>>docker images 
>>docker run -itd -P <Image id>
>>docker ps (to check if container is running)
>>docker ls
>>docker copy 
>>docker exec -it <container_id> bash (to access running container)
>>docker stop <container_id> (to stop a container)
>>docker rm <container_id> (to remove a container)
>>docker rmi <image_id> (to remove images)

----------x----------x----------x----------x----------x----------

Docker is a platform that provides virtual containers on which an application can be deployed independent of the underlying OS of the server. Further the container can be created from a replica called docker image which contains all the dependencies and can run on any OS that has docker engine, with similar results.

VIRTUALIZATION:
Virtualization is the process of sharing hardware resources across several virtually isolated and mutually independent systems. It is achieved by using a hypervisor which acts as a bridge between the Operating System of each of the virtual machines and the underlying hardware.
Applications in virtual environments run on a host operating system on top of the hypervisor.

BASIC DOCKER COMMANDS
	Display docker images available in our machine
$ docker images
	Download docker image.
$ docker pull <image-name / image-id>
	Run docker image.
$ docker run <image-name / image-id>
	Delete docker image.
$ docker rmi <image-name / image-id>
	Display all running docker containers.
$ docker ps 	
	Display all running and stopped containers.
$ docker ps -a
	Delete docker container.
$ docker rm <container-id>
	Delete docker image forcefully.
$ docker rmi  -f <image-id>
	Stop Docker container.
$ docker stop <container-id>

#DOCKER COMMANDS FOR UBUNTU
$ sudo apt update -y
$ sudo apt install docker -y 
$ sudo service docker start (or) sudo systemctl start docker
$ sudo service docker enable (or) sudo systemctl enable docker

DOCKER COMPOSE
Docker Compose is a tool that allows you to define and manage multi-container Docker applications. It simplifies the process of running multiple containers, their configurations, and their interdependencies. Compose uses a YAML file to define the services, networks, and volumes required for your application.
	Docker Compose is a tool which is used to manage multi container-based applications.
	Using Docker Compose we can easily setup & deploy multi container-based applications.
	We will give containers information to Docker Compose using YML file  (docker-compose.yml)
	Docker Compose YML should have all the information related to containers creation.
	Docker Compose YML File Looks Like:

JENKINS
Jenkins is an open-source automation tool written in Java programming language that allows continuous integration. Jenkins offers a straightforward way to set up a continuous integration or continuous delivery environment for almost any combination of languages and source code repositories using pipelines, as well as automating other routine development tasks.
The following are the main or most popular Jenkins use cases:
●	Continuous Integration: With Jenkins pipelines, we can achieve CI for both applications and infrastructure as code.
●	Continuous Delivery: You can set up well-defined and automated application delivery workflows with Jenkins pipelines.

Jenkins achieves CI (Continuous Integration) and CD (Continuous Deployment) with the help of plugins. Plugins are used to allow the integration of various DevOps stages. If you want to integrate a particular tool, you must install the plugins for that tool.

ADVANTAGES OF JENKINS:
●	It is an open-source tool.
●	It is free of cost.
●	It does not require additional installations or components. Means it is easy to install.
●	Easily configurable.
●	It supports 1000 or more plugins to ease your work. If a plugin does not exist, you can write the script for it and share with community.
●	It is built in java and hence it is portable.
●	It is platform independent. It is available for all platforms and different operating systems. Like OS X, Windows, or Linux.
●	Easy support since its open source and widely used.
●	Jenkins also supports cloud-based architecture so that we can deploy Jenkins in cloud-based platforms.

----------x----------x----------x---------x----------x----------


